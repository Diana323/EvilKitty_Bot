[
    {
        "label": "telebot",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "telebot",
        "description": "telebot",
        "detail": "telebot",
        "documentation": {}
    },
    {
        "label": "types",
        "importPath": "telebot",
        "description": "telebot",
        "isExtraImport": true,
        "detail": "telebot",
        "documentation": {}
    },
    {
        "label": "start",
        "kind": 2,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "def start(message):\n    markup = types.InlineKeyboardMarkup()\n    button1 = types.InlineKeyboardButton(\"—Å–∞–π—Ç\", url='https:google.com')\n    markup.add(button1)\n    bot.send_message(message.chat.id, \"–ü—Ä–∏–≤–µ—Ç, {0.first_name}! –ù–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É –∑–∞–º–æ–≤–∏—Ç–∏)\".format(message.from_user), reply_markup=markup)kup) # pyright:ignore\n@bot.message_handler(content_types=['text'])\ndef func(message):\n    if(message.text == \"üëã –ü–æ–∑–¥–æ—Ä–æ–≤–∞—Ç—å—Å—è\"):\n        bot.send_message(message.chat.id, text=\"–ü—Ä–∏–≤–µ–µ—Ç.. –∫–∞–∫–æ–π —Ç–æ–≤–∞—Ä –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?)\")\n    elif(message.text == \"‚ùì –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å\"):",
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "func",
        "kind": 2,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "def func(message):\n    if(message.text == \"üëã –ü–æ–∑–¥–æ—Ä–æ–≤–∞—Ç—å—Å—è\"):\n        bot.send_message(message.chat.id, text=\"–ü—Ä–∏–≤–µ–µ—Ç.. –∫–∞–∫–æ–π —Ç–æ–≤–∞—Ä –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?)\")\n    elif(message.text == \"‚ùì –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å\"):\n        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)\n        btn1 = types.KeyboardButton(\"–ö–∞–∫ –º–µ–Ω—è –∑–æ–≤—É—Ç?\")\n        btn2 = types.KeyboardButton(\"–ß—Ç–æ —è –º–æ–≥—É?\")\n        back = types.KeyboardButton(\"–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é\")\n        markup.add(btn1, btn2, back)\n        bot.send_message(message.chat.id, text=\"–ó–∞–¥–∞–π –º–Ω–µ –≤–æ–ø—Ä–æ—Å\", reply_markup=markup)",
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "start",
        "kind": 2,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "def start(message):\n    if message.text == \"/reg\":\n        bot.send_message(message.from_user.id, \"–ö–∞–∫ —Ç–µ–±—è –∑–æ–≤—É—Ç?\")\n        bot.register_next_step_handler(message, get_name)  # —Å–ª–µ–¥—É—é—â–∏–π —à–∞–≥ ‚Äì get_name\n    else:\n        bot.send_message(message.from_user.id, \"–ù–∞–ø–∏—à–∏ /reg\")\ndef get_name(message):  # –ø–æ–ª—É—á–∞–µ–º —Ñ–∞–º–∏–ª–∏—é\n    global name\n    name = message.text\n    bot.send_message(message.from_user.id, \"–ö–∞–∫–∞—è —É —Ç–µ–±—è —Ñ–∞–º–∏–ª–∏—è?\")",
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "get_name",
        "kind": 2,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "def get_name(message):  # –ø–æ–ª—É—á–∞–µ–º —Ñ–∞–º–∏–ª–∏—é\n    global name\n    name = message.text\n    bot.send_message(message.from_user.id, \"–ö–∞–∫–∞—è —É —Ç–µ–±—è —Ñ–∞–º–∏–ª–∏—è?\")\n    bot.register_next_step_handler(message, get_surname)\ndef get_surname(message):\n    global surname\n    surname = message.text\n    bot.send_message(message.from_user.id, \"–°–∫–æ–ª—å–∫–æ —Ç–µ–±–µ –ª–µ—Ç?\")\n    bot.register_next_step_handler(message, get_age)",
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "get_surname",
        "kind": 2,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "def get_surname(message):\n    global surname\n    surname = message.text\n    bot.send_message(message.from_user.id, \"–°–∫–æ–ª—å–∫–æ —Ç–µ–±–µ –ª–µ—Ç?\")\n    bot.register_next_step_handler(message, get_age)\ndef get_age(message):\n    global age\n    while age == 0:\n        try:\n            age = int(message.text)  # –ø—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤–æ–∑—Ä–∞—Å—Ç –≤–≤–µ–¥–µ–Ω –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ",
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "get_age",
        "kind": 2,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "def get_age(message):\n    global age\n    while age == 0:\n        try:\n            age = int(message.text)  # –ø—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤–æ–∑—Ä–∞—Å—Ç –≤–≤–µ–¥–µ–Ω –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ\n        except Exception:\n            bot.send_message(message.from_user.id, \"–¶–∏—Ñ—Ä–∞–º–∏, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞\")\n        keyboard = types.InlineKeyboardMarkup()\n        key_yes = types.InlineKeyboardButton(text=\"–î–∞\", callback_data=\"yes\")\n        keyboard.add(key_yes)  # –¥–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –≤ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É",
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "callback_worker",
        "kind": 2,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "def callback_worker(call):\n    if call.data == \"yes\":\n        ...\n        bot.send_message(call.message.chat.id, \"–ó–∞–ø–æ–º–Ω—é : )\")\n    elif call.data == \"no\":\n        ...  # –ø–µ—Ä–µ—Å–ø—Ä–∞—à–∏–≤–∞–µ–º\nbot.polling(none_stop=True, interval=0)",
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "token",
        "kind": 5,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "token = \"\"\nbot = telebot.TeleBot(\"6677943038:AAFthSBobYWh-QTjTTpNN3ygtq_X4LxfAIc\")\n@bot.message_handler(commands=['start']) #—Å–æ–∑–¥–∞–µ–º –∫–æ–º–∞–Ω–¥—É\ndef start(message):\n    markup = types.InlineKeyboardMarkup()\n    button1 = types.InlineKeyboardButton(\"—Å–∞–π—Ç\", url='https:google.com')\n    markup.add(button1)\n    bot.send_message(message.chat.id, \"–ü—Ä–∏–≤–µ—Ç, {0.first_name}! –ù–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É –∑–∞–º–æ–≤–∏—Ç–∏)\".format(message.from_user), reply_markup=markup)kup) # pyright:ignore\n@bot.message_handler(content_types=['text'])\ndef func(message):",
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "bot",
        "kind": 5,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "bot = telebot.TeleBot(\"6677943038:AAFthSBobYWh-QTjTTpNN3ygtq_X4LxfAIc\")\n@bot.message_handler(commands=['start']) #—Å–æ–∑–¥–∞–µ–º –∫–æ–º–∞–Ω–¥—É\ndef start(message):\n    markup = types.InlineKeyboardMarkup()\n    button1 = types.InlineKeyboardButton(\"—Å–∞–π—Ç\", url='https:google.com')\n    markup.add(button1)\n    bot.send_message(message.chat.id, \"–ü—Ä–∏–≤–µ—Ç, {0.first_name}! –ù–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É –∑–∞–º–æ–≤–∏—Ç–∏)\".format(message.from_user), reply_markup=markup)kup) # pyright:ignore\n@bot.message_handler(content_types=['text'])\ndef func(message):\n    if(message.text == \"üëã –ü–æ–∑–¥–æ—Ä–æ–≤–∞—Ç—å—Å—è\"):",
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "name",
        "kind": 5,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "name = \"\"\nsurname = \"\"\nage = 0\n@bot.message_handler(content_types=[\"text\"])\ndef start(message):\n    if message.text == \"/reg\":\n        bot.send_message(message.from_user.id, \"–ö–∞–∫ —Ç–µ–±—è –∑–æ–≤—É—Ç?\")\n        bot.register_next_step_handler(message, get_name)  # —Å–ª–µ–¥—É—é—â–∏–π —à–∞–≥ ‚Äì get_name\n    else:\n        bot.send_message(message.from_user.id, \"–ù–∞–ø–∏—à–∏ /reg\")",
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "surname",
        "kind": 5,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "surname = \"\"\nage = 0\n@bot.message_handler(content_types=[\"text\"])\ndef start(message):\n    if message.text == \"/reg\":\n        bot.send_message(message.from_user.id, \"–ö–∞–∫ —Ç–µ–±—è –∑–æ–≤—É—Ç?\")\n        bot.register_next_step_handler(message, get_name)  # —Å–ª–µ–¥—É—é—â–∏–π —à–∞–≥ ‚Äì get_name\n    else:\n        bot.send_message(message.from_user.id, \"–ù–∞–ø–∏—à–∏ /reg\")\ndef get_name(message):  # –ø–æ–ª—É—á–∞–µ–º —Ñ–∞–º–∏–ª–∏—é",
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "age",
        "kind": 5,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "age = 0\n@bot.message_handler(content_types=[\"text\"])\ndef start(message):\n    if message.text == \"/reg\":\n        bot.send_message(message.from_user.id, \"–ö–∞–∫ —Ç–µ–±—è –∑–æ–≤—É—Ç?\")\n        bot.register_next_step_handler(message, get_name)  # —Å–ª–µ–¥—É—é—â–∏–π —à–∞–≥ ‚Äì get_name\n    else:\n        bot.send_message(message.from_user.id, \"–ù–∞–ø–∏—à–∏ /reg\")\ndef get_name(message):  # –ø–æ–ª—É—á–∞–µ–º —Ñ–∞–º–∏–ª–∏—é\n    global name",
        "detail": "main",
        "documentation": {}
    }
]